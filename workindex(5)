<!DOCTYPE html>
<html>
<head>
<title>MyWork</title>
</head>

<body><u>Typographical symbols and punctuation marks are marks and symbols used in typography with a variety of purposes such as to help with legibility and accessibility, or to identify special cases. This list gives those most commonly encountered with Latin script. For a far more comprehensive list of symbols and signs, see List of Unicode characters. For other languages and symbol sets (especially accents), see below
    This article contains special characters. Without proper rendering support, you may see question marks, boxes, or other symbols.
    
    In this table,
    
        The first cell in each row gives a symbol;
        The second, a link to the article that details it, using its Unicode standard name or common alias (holding the mouse pointer on the hyperlink will pop up a summary of the symbol's function);
        The third, symbols listed elsewhere in the table that is similar to it in meaning or appearance or that may be confused with it;
        The fourth (if present) links to related article(s) or adds a clarification not</u>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</body>

</html> 